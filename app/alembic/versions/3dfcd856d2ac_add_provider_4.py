"""Add provider 4

Revision ID: 3dfcd856d2ac
Revises: 74869f839bc3
Create Date: 2024-12-28 16:47:34.074333

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "3dfcd856d2ac"
down_revision: Union[str, None] = "74869f839bc3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("ACTIVE", "INACTIVE", name="status").create(op.get_bind())
    op.drop_column("Accounts", "login_customer_id")
    op.drop_column("Accounts", "email")
    op.drop_column("Accounts", "currency")
    op.add_column(
        "Providers",
        sa.Column("spreadsheet_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "Providers",
        sa.Column(
            "login_customer_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "Providers",
        sa.Column("currency", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column(
        "Providers",
        sa.Column(
            "status",
            postgresql.ENUM("ACTIVE", "INACTIVE", name="status", create_type=False),
            nullable=False,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("Providers", "status")
    op.drop_column("Providers", "currency")
    op.drop_column("Providers", "login_customer_id")
    op.drop_column("Providers", "spreadsheet_id")
    op.add_column(
        "Accounts",
        sa.Column("currency", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "Accounts",
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "Accounts",
        sa.Column(
            "login_customer_id", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    sa.Enum("ACTIVE", "INACTIVE", name="status").drop(op.get_bind())
    # ### end Alembic commands ###
