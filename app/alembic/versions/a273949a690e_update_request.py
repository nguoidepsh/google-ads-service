"""update request

Revision ID: a273949a690e
Revises: 5a7633229d03
Create Date: 2024-12-29 03:45:06.783620

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a273949a690e"
down_revision: Union[str, None] = "5a7633229d03"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("Requests_account_id_fkey", "Requests", type_="foreignkey")
    op.alter_column(
        "Requests",
        "account_id",
        existing_type=sa.UUID(),
        type_=sqlmodel.sql.sqltypes.AutoString(),
        existing_nullable=True,
    )
    op.create_foreign_key(None, "Requests", "Accounts", ["account_id"], ["customer_id"])
    op.sync_enum_values(
        enum_schema="public",
        enum_name="requesttype",
        new_values=["DEPOSIT", "WITHDRAW", "ACCOUNT"],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="Requests", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="public",
        enum_name="requesttype",
        new_values=["DEPOSIT", "WITHDRAW"],
        affected_columns=[
            TableReference(
                table_schema="public", table_name="Requests", column_name="type"
            )
        ],
        enum_values_to_rename=[],
    )
    op.drop_constraint(None, "Requests", type_="foreignkey")
    op.create_foreign_key(
        "Requests_account_id_fkey", "Requests", "Accounts", ["account_id"], ["id"]
    )
    op.alter_column(
        "Requests",
        "account_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        type_=sa.UUID(),
        existing_nullable=True,
    )

    # ### end Alembic commands ###
